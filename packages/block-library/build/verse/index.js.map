{"version":3,"sources":["/home/circleci/project/packages/block-library/src/verse/index.js"],"names":["name","settings","title","description","icon","category","keywords","attributes","content","type","source","selector","default","textAlign","transforms","from","blocks","transform","to","edit","setAttributes","className","mergeBlocks","nextAlign","nextContent","save","merge","attributesToMerge"],"mappings":"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","sourcesContent":["/**\n * WordPress\n */\nimport { __ } from '@wordpress/i18n';\nimport { Fragment } from '@wordpress/element';\nimport { createBlock } from '@wordpress/blocks';\nimport {\n\tRichText,\n\tBlockControls,\n\tAlignmentToolbar,\n} from '@wordpress/editor';\nimport { SVG, Path } from '@wordpress/components';\n\nexport const name = 'core/verse';\n\nexport const settings = {\n\ttitle: __( 'Verse' ),\n\n\tdescription: __( 'Insert poetry. Use special spacing formats. Or quote song lyrics.' ),\n\n\ticon: <SVG viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><Path fill=\"none\" d=\"M0 0h24v24H0V0z\" /><Path d=\"M3 17v4h4l11-11-4-4L3 17zm3 2H5v-1l9-9 1 1-9 9zM21 6l-3-3h-1l-2 2 4 4 2-2V6z\" /></SVG>,\n\n\tcategory: 'formatting',\n\n\tkeywords: [ __( 'poetry' ) ],\n\n\tattributes: {\n\t\tcontent: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'html',\n\t\t\tselector: 'pre',\n\t\t\tdefault: '',\n\t\t},\n\t\ttextAlign: {\n\t\t\ttype: 'string',\n\t\t},\n\t},\n\n\ttransforms: {\n\t\tfrom: [\n\t\t\t{\n\t\t\t\ttype: 'block',\n\t\t\t\tblocks: [ 'core/paragraph' ],\n\t\t\t\ttransform: ( attributes ) =>\n\t\t\t\t\tcreateBlock( 'core/verse', attributes ),\n\t\t\t},\n\t\t],\n\t\tto: [\n\t\t\t{\n\t\t\t\ttype: 'block',\n\t\t\t\tblocks: [ 'core/paragraph' ],\n\t\t\t\ttransform: ( attributes ) =>\n\t\t\t\t\tcreateBlock( 'core/paragraph', attributes ),\n\t\t\t},\n\t\t],\n\t},\n\n\tedit( { attributes, setAttributes, className, mergeBlocks } ) {\n\t\tconst { textAlign, content } = attributes;\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<BlockControls>\n\t\t\t\t\t<AlignmentToolbar\n\t\t\t\t\t\tvalue={ textAlign }\n\t\t\t\t\t\tonChange={ ( nextAlign ) => {\n\t\t\t\t\t\t\tsetAttributes( { textAlign: nextAlign } );\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t</BlockControls>\n\t\t\t\t<RichText\n\t\t\t\t\ttagName=\"pre\"\n\t\t\t\t\tvalue={ content }\n\t\t\t\t\tonChange={ ( nextContent ) => {\n\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\tcontent: nextContent,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} }\n\t\t\t\t\tstyle={ { textAlign: textAlign } }\n\t\t\t\t\tplaceholder={ __( 'Writeâ€¦' ) }\n\t\t\t\t\twrapperClassName={ className }\n\t\t\t\t\tonMerge={ mergeBlocks }\n\t\t\t\t/>\n\t\t\t</Fragment>\n\t\t);\n\t},\n\n\tsave( { attributes } ) {\n\t\tconst { textAlign, content } = attributes;\n\n\t\treturn (\n\t\t\t<RichText.Content\n\t\t\t\ttagName=\"pre\"\n\t\t\t\tstyle={ { textAlign: textAlign } }\n\t\t\t\tvalue={ content }\n\t\t\t/>\n\t\t);\n\t},\n\n\tmerge( attributes, attributesToMerge ) {\n\t\treturn {\n\t\t\tcontent: attributes.content + attributesToMerge.content,\n\t\t};\n\t},\n};\n"]}