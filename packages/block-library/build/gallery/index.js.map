{"version":3,"sources":["/home/circleci/project/packages/block-library/src/gallery/index.js"],"names":["blockAttributes","images","type","default","source","selector","query","url","attribute","link","alt","id","caption","columns","imageCrop","linkTo","name","settings","title","description","icon","category","keywords","attributes","supports","align","transforms","from","isMultiBlock","blocks","transform","validImages","length","map","tag","shortcode","ids","named","split","parseInt","isMatch","files","file","indexOf","onChange","block","filesList","onFileChange","clientId","image","allowedTypes","to","edit","save","href","img","deprecated"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { filter, every } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { createBlock } from '@wordpress/blocks';\nimport { RichText, mediaUpload } from '@wordpress/editor';\nimport { createBlobURL } from '@wordpress/blob';\nimport { G, Path, SVG } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { default as edit, defaultColumnsNumber, pickRelevantMediaFiles } from './edit';\n\nconst blockAttributes = {\n\timages: {\n\t\ttype: 'array',\n\t\tdefault: [],\n\t\tsource: 'query',\n\t\tselector: 'ul.wp-block-gallery .blocks-gallery-item',\n\t\tquery: {\n\t\t\turl: {\n\t\t\t\tsource: 'attribute',\n\t\t\t\tselector: 'img',\n\t\t\t\tattribute: 'src',\n\t\t\t},\n\t\t\tlink: {\n\t\t\t\tsource: 'attribute',\n\t\t\t\tselector: 'img',\n\t\t\t\tattribute: 'data-link',\n\t\t\t},\n\t\t\talt: {\n\t\t\t\tsource: 'attribute',\n\t\t\t\tselector: 'img',\n\t\t\t\tattribute: 'alt',\n\t\t\t\tdefault: '',\n\t\t\t},\n\t\t\tid: {\n\t\t\t\tsource: 'attribute',\n\t\t\t\tselector: 'img',\n\t\t\t\tattribute: 'data-id',\n\t\t\t},\n\t\t\tcaption: {\n\t\t\t\ttype: 'string',\n\t\t\t\tsource: 'html',\n\t\t\t\tselector: 'figcaption',\n\t\t\t},\n\t\t},\n\t},\n\tcolumns: {\n\t\ttype: 'number',\n\t},\n\timageCrop: {\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t},\n\tlinkTo: {\n\t\ttype: 'string',\n\t\tdefault: 'none',\n\t},\n};\n\nexport const name = 'core/gallery';\n\nexport const settings = {\n\ttitle: __( 'Gallery' ),\n\tdescription: __( 'Display multiple images in a rich gallery.' ),\n\ticon: <SVG viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><Path fill=\"none\" d=\"M0 0h24v24H0V0z\" /><G><Path d=\"M20 4v12H8V4h12m0-2H8L6 4v12l2 2h12l2-2V4l-2-2z\" /><Path d=\"M12 12l1 2 3-3 3 4H9z\" /><Path d=\"M2 6v14l2 2h14v-2H4V6H2z\" /></G></SVG>,\n\tcategory: 'common',\n\tkeywords: [ __( 'images' ), __( 'photos' ) ],\n\tattributes: blockAttributes,\n\tsupports: {\n\t\talign: true,\n\t},\n\n\ttransforms: {\n\t\tfrom: [\n\t\t\t{\n\t\t\t\ttype: 'block',\n\t\t\t\tisMultiBlock: true,\n\t\t\t\tblocks: [ 'core/image' ],\n\t\t\t\ttransform: ( attributes ) => {\n\t\t\t\t\tconst validImages = filter( attributes, ( { id, url } ) => id && url );\n\t\t\t\t\tif ( validImages.length > 0 ) {\n\t\t\t\t\t\treturn createBlock( 'core/gallery', {\n\t\t\t\t\t\t\timages: validImages.map( ( { id, url, alt, caption } ) => ( { id, url, alt, caption } ) ),\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t\treturn createBlock( 'core/gallery' );\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'shortcode',\n\t\t\t\ttag: 'gallery',\n\t\t\t\tattributes: {\n\t\t\t\t\timages: {\n\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\tshortcode: ( { named: { ids } } ) => {\n\t\t\t\t\t\t\tif ( ! ids ) {\n\t\t\t\t\t\t\t\treturn [];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ids.split( ',' ).map( ( id ) => ( {\n\t\t\t\t\t\t\t\tid: parseInt( id, 10 ),\n\t\t\t\t\t\t\t} ) );\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tcolumns: {\n\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\tshortcode: ( { named: { columns = '3' } } ) => {\n\t\t\t\t\t\t\treturn parseInt( columns, 10 );\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tlinkTo: {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tshortcode: ( { named: { link = 'attachment' } } ) => {\n\t\t\t\t\t\t\treturn link === 'file' ? 'media' : link;\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t// When created by drag and dropping multiple files on an insertion point\n\t\t\t\ttype: 'files',\n\t\t\t\tisMatch( files ) {\n\t\t\t\t\treturn files.length !== 1 && every( files, ( file ) => file.type.indexOf( 'image/' ) === 0 );\n\t\t\t\t},\n\t\t\t\ttransform( files, onChange ) {\n\t\t\t\t\tconst block = createBlock( 'core/gallery', {\n\t\t\t\t\t\timages: files.map( ( file ) => pickRelevantMediaFiles( {\n\t\t\t\t\t\t\turl: createBlobURL( file ),\n\t\t\t\t\t\t} ) ),\n\t\t\t\t\t} );\n\t\t\t\t\tmediaUpload( {\n\t\t\t\t\t\tfilesList: files,\n\t\t\t\t\t\tonFileChange: ( images ) => {\n\t\t\t\t\t\t\tonChange( block.clientId, {\n\t\t\t\t\t\t\t\timages: images.map( ( image ) => pickRelevantMediaFiles( image ) ),\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t},\n\t\t\t\t\t\tallowedTypes: [ 'image' ],\n\t\t\t\t\t} );\n\t\t\t\t\treturn block;\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tto: [\n\t\t\t{\n\t\t\t\ttype: 'block',\n\t\t\t\tblocks: [ 'core/image' ],\n\t\t\t\ttransform: ( { images } ) => {\n\t\t\t\t\tif ( images.length > 0 ) {\n\t\t\t\t\t\treturn images.map( ( { id, url, alt, caption } ) => createBlock( 'core/image', { id, url, alt, caption } ) );\n\t\t\t\t\t}\n\t\t\t\t\treturn createBlock( 'core/image' );\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n\n\tedit,\n\n\tsave( { attributes } ) {\n\t\tconst { images, columns = defaultColumnsNumber( attributes ), imageCrop, linkTo } = attributes;\n\t\treturn (\n\t\t\t<ul className={ `columns-${ columns } ${ imageCrop ? 'is-cropped' : '' }` } >\n\t\t\t\t{ images.map( ( image ) => {\n\t\t\t\t\tlet href;\n\n\t\t\t\t\tswitch ( linkTo ) {\n\t\t\t\t\t\tcase 'media':\n\t\t\t\t\t\t\thref = image.url;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'attachment':\n\t\t\t\t\t\t\thref = image.link;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst img = <img src={ image.url } alt={ image.alt } data-id={ image.id } data-link={ image.link } className={ image.id ? `wp-image-${ image.id }` : null } />;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={ image.id || image.url } className=\"blocks-gallery-item\">\n\t\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t\t{ href ? <a href={ href }>{ img }</a> : img }\n\t\t\t\t\t\t\t\t{ image.caption && image.caption.length > 0 && (\n\t\t\t\t\t\t\t\t\t<RichText.Content tagName=\"figcaption\" value={ image.caption } />\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</ul>\n\t\t);\n\t},\n\n\tdeprecated: [\n\t\t{\n\t\t\tattributes: blockAttributes,\n\t\t\tsave( { attributes } ) {\n\t\t\t\tconst { images, columns = defaultColumnsNumber( attributes ), imageCrop, linkTo } = attributes;\n\t\t\t\treturn (\n\t\t\t\t\t<ul className={ `columns-${ columns } ${ imageCrop ? 'is-cropped' : '' }` } >\n\t\t\t\t\t\t{ images.map( ( image ) => {\n\t\t\t\t\t\t\tlet href;\n\n\t\t\t\t\t\t\tswitch ( linkTo ) {\n\t\t\t\t\t\t\t\tcase 'media':\n\t\t\t\t\t\t\t\t\thref = image.url;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'attachment':\n\t\t\t\t\t\t\t\t\thref = image.link;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst img = <img src={ image.url } alt={ image.alt } data-id={ image.id } data-link={ image.link } />;\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li key={ image.id || image.url } className=\"blocks-gallery-item\">\n\t\t\t\t\t\t\t\t\t<figure>\n\t\t\t\t\t\t\t\t\t\t{ href ? <a href={ href }>{ img }</a> : img }\n\t\t\t\t\t\t\t\t\t\t{ image.caption && image.caption.length > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t<RichText.Content tagName=\"figcaption\" value={ image.caption } />\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} ) }\n\t\t\t\t\t</ul>\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tattributes: {\n\t\t\t\t...blockAttributes,\n\t\t\t\timages: {\n\t\t\t\t\t...blockAttributes.images,\n\t\t\t\t\tselector: 'div.wp-block-gallery figure.blocks-gallery-image img',\n\t\t\t\t},\n\t\t\t\talign: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdefault: 'none',\n\t\t\t\t},\n\t\t\t},\n\n\t\t\tsave( { attributes } ) {\n\t\t\t\tconst { images, columns = defaultColumnsNumber( attributes ), align, imageCrop, linkTo } = attributes;\n\t\t\t\treturn (\n\t\t\t\t\t<div className={ `align${ align } columns-${ columns } ${ imageCrop ? 'is-cropped' : '' }` } >\n\t\t\t\t\t\t{ images.map( ( image ) => {\n\t\t\t\t\t\t\tlet href;\n\n\t\t\t\t\t\t\tswitch ( linkTo ) {\n\t\t\t\t\t\t\t\tcase 'media':\n\t\t\t\t\t\t\t\t\thref = image.url;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'attachment':\n\t\t\t\t\t\t\t\t\thref = image.link;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst img = <img src={ image.url } alt={ image.alt } data-id={ image.id } />;\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<figure key={ image.id || image.url } className=\"blocks-gallery-image\">\n\t\t\t\t\t\t\t\t\t{ href ? <a href={ href }>{ img }</a> : img }\n\t\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} ) }\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t],\n};\n"]}