{"version":3,"sources":["/home/circleci/project/packages/editor/src/components/block-styles/index.js"],"names":["find","noop","classnames","compose","withSelect","withDispatch","TokenList","ENTER","SPACE","BlockPreviewContent","getActiveStyle","styles","className","values","style","indexOf","potentialStyleName","substring","activeStyle","name","replaceActiveStyle","newStyle","list","remove","add","value","BlockStyles","onChangeClassName","attributes","onSwitch","onHoverClassName","length","updateClassName","updatedClassName","map","styleClassName","event","keyCode","preventDefault","label","select","clientId","getBlock","getBlockStyles","block","dispatch","newClassName","updateBlockAttributes"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { find, noop } from 'lodash';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { compose } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport TokenList from '@wordpress/token-list';\nimport { ENTER, SPACE } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport { BlockPreviewContent } from '../block-preview';\n\n/**\n * Returns the active style from the given className.\n *\n * @param {Array} styles Block style variations.\n * @param {string} className  Class name\n *\n * @return {Object?} The active style.\n */\nexport function getActiveStyle( styles, className ) {\n\tfor ( const style of new TokenList( className ).values() ) {\n\t\tif ( style.indexOf( 'is-style-' ) === -1 ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst potentialStyleName = style.substring( 9 );\n\t\tconst activeStyle = find( styles, { name: potentialStyleName } );\n\t\tif ( activeStyle ) {\n\t\t\treturn activeStyle;\n\t\t}\n\t}\n\n\treturn find( styles, 'isDefault' );\n}\n\n/**\n * Replaces the active style in the block's className.\n *\n * @param {string}  className   Class name.\n * @param {Object?} activeStyle The replaced style.\n * @param {Object}  newStyle    The replacing style.\n *\n * @return {string} The updated className.\n */\nexport function replaceActiveStyle( className, activeStyle, newStyle ) {\n\tconst list = new TokenList( className );\n\n\tif ( activeStyle ) {\n\t\tlist.remove( 'is-style-' + activeStyle.name );\n\t}\n\n\tlist.add( 'is-style-' + newStyle.name );\n\n\treturn list.value;\n}\n\nfunction BlockStyles( {\n\tstyles,\n\tclassName,\n\tonChangeClassName,\n\tname,\n\tattributes,\n\tonSwitch = noop,\n\tonHoverClassName = noop,\n} ) {\n\tif ( ! styles || styles.length === 0 ) {\n\t\treturn null;\n\t}\n\n\tconst activeStyle = getActiveStyle( styles, className );\n\tfunction updateClassName( style ) {\n\t\tconst updatedClassName = replaceActiveStyle( className, activeStyle, style );\n\t\tonChangeClassName( updatedClassName );\n\t\tonSwitch();\n\t}\n\n\treturn (\n\t\t<div className=\"editor-block-styles\">\n\t\t\t{ styles.map( ( style ) => {\n\t\t\t\tconst styleClassName = replaceActiveStyle( className, activeStyle, style );\n\t\t\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tkey={ style.name }\n\t\t\t\t\t\tclassName={ classnames(\n\t\t\t\t\t\t\t'editor-block-styles__item', {\n\t\t\t\t\t\t\t\t'is-active': activeStyle === style,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t) }\n\t\t\t\t\t\tonClick={ () => updateClassName( style ) }\n\t\t\t\t\t\tonKeyDown={ ( event ) => {\n\t\t\t\t\t\t\tif ( ENTER === event.keyCode || SPACE === event.keyCode ) {\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\tupdateClassName( style );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tonMouseEnter={ () => onHoverClassName( styleClassName ) }\n\t\t\t\t\t\tonMouseLeave={ () => onHoverClassName( null ) }\n\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\taria-label={ style.label || style.name }\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"editor-block-styles__item-preview\">\n\t\t\t\t\t\t\t<BlockPreviewContent\n\t\t\t\t\t\t\t\tname={ name }\n\t\t\t\t\t\t\t\tattributes={ {\n\t\t\t\t\t\t\t\t\t...attributes,\n\t\t\t\t\t\t\t\t\tclassName: styleClassName,\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"editor-block-styles__item-label\">\n\t\t\t\t\t\t\t{ style.label || style.name }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t} ) }\n\t\t</div>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select, { clientId } ) => {\n\t\tconst { getBlock } = select( 'core/editor' );\n\t\tconst { getBlockStyles } = select( 'core/blocks' );\n\t\tconst block = getBlock( clientId );\n\n\t\treturn {\n\t\t\tname: block.name,\n\t\t\tattributes: block.attributes,\n\t\t\tclassName: block.attributes.className || '',\n\t\t\tstyles: getBlockStyles( block.name ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, { clientId } ) => {\n\t\treturn {\n\t\t\tonChangeClassName( newClassName ) {\n\t\t\t\tdispatch( 'core/editor' ).updateBlockAttributes( clientId, {\n\t\t\t\t\tclassName: newClassName,\n\t\t\t\t} );\n\t\t\t},\n\t\t};\n\t} ),\n] )( BlockStyles );\n"]}