{"version":3,"sources":["/home/circleci/project/packages/editor/src/components/rich-text/inserter-list-item.js"],"names":["normalizeIconObject","Fill","withSelect","InserterListItem","normalizeTerm","isResult","keywords","filterValue","some","string","indexOf","RichTextInserterItem","select","name","formatType","getFormatType","props","title","push","icon"],"mappings":";;;AAAA;;;AAGA,SAASA,mBAAT,QAAoC,mBAApC;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAEA;;;;AAGA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,SAASC,aAAT,QAA8B,kBAA9B;;AAEA,SAASC,QAAT,CAAmBC,QAAnB,EAA6BC,WAA7B,EAA2C;AAC1C,SAAOD,QAAQ,CAACE,IAAT,CAAe,UAAEC,MAAF;AAAA,WACrBL,aAAa,CAAEK,MAAF,CAAb,CAAwBC,OAAxB,CAAiCN,aAAa,CAAEG,WAAF,CAA9C,MAAoE,CAAC,CADhD;AAAA,GAAf,CAAP;AAGA;;AAED,OAAO,IAAMI,oBAAoB,GAAGT,UAAU,CAAE,UAAEU,MAAF;AAAA,MAAYC,IAAZ,QAAYA,IAAZ;AAAA,SAA0B;AACzEC,IAAAA,UAAU,EAAEF,MAAM,CAAE,gBAAF,CAAN,CAA2BG,aAA3B,CAA0CF,IAA1C;AAD6D,GAA1B;AAAA,CAAF,CAAV,CAE7B,UAAEG,KAAF,EAAa;AACnB,SACC,cAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KACG,iBAAuB;AAAA,QAAnBT,WAAmB,SAAnBA,WAAmB;AAAA,4BACSS,KAAK,CAACF,UADf;AAAA,kDAChBR,QADgB;AAAA,QAChBA,QADgB,sCACL,EADK;AAAA,QACDW,KADC,qBACDA,KADC;AAGxBX,IAAAA,QAAQ,CAACY,IAAT,CAAeD,KAAf,EAAsBD,KAAK,CAACC,KAA5B;;AAEA,QAAKV,WAAW,IAAI,CAAEF,QAAQ,CAAEC,QAAF,EAAYC,WAAZ,CAA9B,EAA0D;AACzD,aAAO,IAAP;AACA;;AAED,WAAO,cAAC,gBAAD,eAAuBS,KAAvB;AAA+B,MAAA,IAAI,EAAGhB,mBAAmB,CAAEgB,KAAK,CAACG,IAAR;AAAzD,OAAP;AACA,GAXF,CADD;AAeA,CAlBmC,CAA7B","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { normalizeIconObject } from '@wordpress/blocks';\nimport { Fill } from '@wordpress/components';\nimport { withSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport InserterListItem from '../inserter-list-item';\nimport { normalizeTerm } from '../inserter/menu';\n\nfunction isResult( keywords, filterValue ) {\n\treturn keywords.some( ( string ) =>\n\t\tnormalizeTerm( string ).indexOf( normalizeTerm( filterValue ) ) !== -1\n\t);\n}\n\nexport const RichTextInserterItem = withSelect( ( select, { name } ) => ( {\n\tformatType: select( 'core/rich-text' ).getFormatType( name ),\n} ) )( ( props ) => {\n\treturn (\n\t\t<Fill name=\"Inserter.InlineElements\">\n\t\t\t{ ( { filterValue } ) => {\n\t\t\t\tconst { keywords = [], title } = props.formatType;\n\n\t\t\t\tkeywords.push( title, props.title );\n\n\t\t\t\tif ( filterValue && ! isResult( keywords, filterValue ) ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn <InserterListItem { ...props } icon={ normalizeIconObject( props.icon ) } />;\n\t\t\t} }\n\t\t</Fill>\n\t);\n} );\n"]}