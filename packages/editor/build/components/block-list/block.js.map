{"version":3,"sources":["/home/circleci/project/packages/editor/src/components/block-list/block.js"],"names":["BlockListBlock","arguments","setBlockListRef","bind","bindBlockNode","setAttributes","maybeHover","forceFocusedContextualToolbar","hideHoverEffects","mergeBlocks","insertBlocksAfter","onFocus","preventDrag","onPointerDown","deleteOrInsertAfterWrapper","onBlockError","onTouchStart","onClick","onDragStart","onDragEnd","selectOnOpen","onShiftSelection","hadTouchStart","state","error","dragging","isHovered","isForcingContextualToolbar","props","isSelected","focusTabbable","prevProps","isTypingWithinBlock","isFirstMultiSelected","wrapperNode","focus","node","blockRef","clientId","forceUpdate","ignoreInnerBlocks","initialPosition","contains","document","activeElement","textInputs","tabbable","find","filter","isTextField","isReverse","target","last","first","attributes","block","onChange","type","name","metaAttributes","result","value","key","meta","onMetaChange","isPartOfMultiSelection","isMultiSelecting","setState","forward","previousBlockClientId","nextBlockClientId","onMerge","blocks","onInsertBlocks","order","onSelect","event","preventDefault","button","shiftKey","onSelectionStart","keyCode","isLocked","ENTER","onInsertDefaultBlockAfter","BACKSPACE","DELETE","onRemove","open","isSelectionEnabled","getBlockSelectionStart","onMultiSelect","hoverArea","mode","isFocusMode","hasFixedToolbar","isFirst","isLast","rootClientId","isCaretWithinFormattedText","isEmptyDefaultBlock","isMovable","isPreviousBlockADefaultEmptyBlock","isParentOfSelectedBlock","isDraggable","className","blockName","isValid","blockType","blockLabel","title","isUnregisteredBlock","showEmptyBlockSideInserter","showSideInserter","shouldAppearSelected","shouldAppearHovered","shouldRenderMovers","shouldShowBreadcrumb","shouldShowContextualToolbar","shouldShowMobileToolbar","shouldShowInsertionPoint","canShowInBetweenInserter","wrapperClassName","onReplace","wrapperProps","getEditWrapperProps","blockElementId","blockEdit","undefined","toggleSelection","display","Component","applyWithSelect","select","isLargeViewport","isBlockSelected","getPreviousBlockClientId","getNextBlockClientId","getBlock","isAncestorMultiSelected","isBlockMultiSelected","isFirstMultiSelectedBlock","isTyping","getBlockIndex","getEditedPostAttribute","getBlockMode","getSelectedBlocksInitialCaretPosition","getEditorSettings","hasSelectedInnerBlock","getTemplateLock","focusMode","previousBlock","templateLock","applyWithDispatch","dispatch","ownProps","updateBlockAttributes","selectBlock","multiSelect","insertBlocks","insertDefaultBlock","removeBlock","replaceBlocks","editPost","index","selectionEnabled"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { get, reduce, size, first, last } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component, Fragment } from '@wordpress/element';\nimport {\n\tfocus,\n\tisTextField,\n\tplaceCaretAtHorizontalEdge,\n\tplaceCaretAtVerticalEdge,\n} from '@wordpress/dom';\nimport { BACKSPACE, DELETE, ENTER } from '@wordpress/keycodes';\nimport {\n\tgetBlockType,\n\tgetSaveElement,\n\tisReusableBlock,\n\tisUnmodifiedDefaultBlock,\n\tgetUnregisteredTypeHandlerName,\n} from '@wordpress/blocks';\nimport { KeyboardShortcuts, withFilters } from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { withViewportMatch } from '@wordpress/viewport';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport BlockEdit from '../block-edit';\nimport BlockMover from '../block-mover';\nimport BlockDropZone from '../block-drop-zone';\nimport BlockInvalidWarning from './block-invalid-warning';\nimport BlockCrashWarning from './block-crash-warning';\nimport BlockCrashBoundary from './block-crash-boundary';\nimport BlockHtml from './block-html';\nimport BlockBreadcrumb from './breadcrumb';\nimport BlockContextualToolbar from './block-contextual-toolbar';\nimport BlockMultiControls from './multi-controls';\nimport BlockMobileToolbar from './block-mobile-toolbar';\nimport BlockInsertionPoint from './insertion-point';\nimport IgnoreNestedEvents from '../ignore-nested-events';\nimport InserterWithShortcuts from '../inserter-with-shortcuts';\nimport Inserter from '../inserter';\nimport HoverArea from './hover-area';\nimport { isInsideRootBlock } from '../../utils/dom';\n\nexport class BlockListBlock extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.setBlockListRef = this.setBlockListRef.bind( this );\n\t\tthis.bindBlockNode = this.bindBlockNode.bind( this );\n\t\tthis.setAttributes = this.setAttributes.bind( this );\n\t\tthis.maybeHover = this.maybeHover.bind( this );\n\t\tthis.forceFocusedContextualToolbar = this.forceFocusedContextualToolbar.bind( this );\n\t\tthis.hideHoverEffects = this.hideHoverEffects.bind( this );\n\t\tthis.mergeBlocks = this.mergeBlocks.bind( this );\n\t\tthis.insertBlocksAfter = this.insertBlocksAfter.bind( this );\n\t\tthis.onFocus = this.onFocus.bind( this );\n\t\tthis.preventDrag = this.preventDrag.bind( this );\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.deleteOrInsertAfterWrapper = this.deleteOrInsertAfterWrapper.bind( this );\n\t\tthis.onBlockError = this.onBlockError.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onClick = this.onClick.bind( this );\n\t\tthis.onDragStart = this.onDragStart.bind( this );\n\t\tthis.onDragEnd = this.onDragEnd.bind( this );\n\t\tthis.selectOnOpen = this.selectOnOpen.bind( this );\n\t\tthis.onShiftSelection = this.onShiftSelection.bind( this );\n\t\tthis.hadTouchStart = false;\n\n\t\tthis.state = {\n\t\t\terror: null,\n\t\t\tdragging: false,\n\t\t\tisHovered: false,\n\t\t};\n\t\tthis.isForcingContextualToolbar = false;\n\t}\n\n\tcomponentDidMount() {\n\t\tif ( this.props.isSelected ) {\n\t\t\tthis.focusTabbable();\n\t\t}\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( this.isForcingContextualToolbar ) {\n\t\t\t// The forcing of contextual toolbar should only be true during one update,\n\t\t\t// after the first update normal conditions should apply.\n\t\t\tthis.isForcingContextualToolbar = false;\n\t\t}\n\t\tif ( this.props.isTypingWithinBlock || this.props.isSelected ) {\n\t\t\tthis.hideHoverEffects();\n\t\t}\n\n\t\tif ( this.props.isSelected && ! prevProps.isSelected ) {\n\t\t\tthis.focusTabbable( true );\n\t\t}\n\n\t\t// When triggering a multi-selection,\n\t\t// move the focus to the wrapper of the first selected block.\n\t\tif ( this.props.isFirstMultiSelected && ! prevProps.isFirstMultiSelected ) {\n\t\t\tthis.wrapperNode.focus();\n\t\t}\n\t}\n\n\tsetBlockListRef( node ) {\n\t\tthis.wrapperNode = node;\n\t\tthis.props.blockRef( node, this.props.clientId );\n\n\t\t// We need to rerender to trigger a rerendering of HoverArea\n\t\t// it depents on this.wrapperNode but we can't keep this.wrapperNode in state\n\t\t// Because we need it to be immediately availeble for `focusableTabbable` to work.\n\t\tthis.forceUpdate();\n\t}\n\n\tbindBlockNode( node ) {\n\t\tthis.node = node;\n\t}\n\n\t/**\n\t * When a block becomes selected, transition focus to an inner tabbable.\n\t *\n\t * @param {boolean} ignoreInnerBlocks Should not focus inner blocks.\n\t */\n\tfocusTabbable( ignoreInnerBlocks ) {\n\t\tconst { initialPosition } = this.props;\n\n\t\t// Focus is captured by the wrapper node, so while focus transition\n\t\t// should only consider tabbables within editable display, since it\n\t\t// may be the wrapper itself or a side control which triggered the\n\t\t// focus event, don't unnecessary transition to an inner tabbable.\n\t\tif ( this.wrapperNode.contains( document.activeElement ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Find all tabbables within node.\n\t\tconst textInputs = focus.tabbable\n\t\t\t.find( this.node )\n\t\t\t.filter( isTextField )\n\t\t\t// Exclude inner blocks\n\t\t\t.filter( ( node ) => ! ignoreInnerBlocks || isInsideRootBlock( this.node, node ) );\n\n\t\t// If reversed (e.g. merge via backspace), use the last in the set of\n\t\t// tabbables.\n\t\tconst isReverse = -1 === initialPosition;\n\t\tconst target = ( isReverse ? last : first )( textInputs );\n\n\t\tif ( ! target ) {\n\t\t\tthis.wrapperNode.focus();\n\t\t\treturn;\n\t\t}\n\n\t\ttarget.focus();\n\n\t\t// In reverse case, need to explicitly place caret position.\n\t\tif ( isReverse ) {\n\t\t\tplaceCaretAtHorizontalEdge( target, true );\n\t\t\tplaceCaretAtVerticalEdge( target, true );\n\t\t}\n\t}\n\n\tsetAttributes( attributes ) {\n\t\tconst { block, onChange } = this.props;\n\t\tconst type = getBlockType( block.name );\n\t\tonChange( block.clientId, attributes );\n\n\t\tconst metaAttributes = reduce( attributes, ( result, value, key ) => {\n\t\t\tif ( get( type, [ 'attributes', key, 'source' ] ) === 'meta' ) {\n\t\t\t\tresult[ type.attributes[ key ].meta ] = value;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, {} );\n\n\t\tif ( size( metaAttributes ) ) {\n\t\t\tthis.props.onMetaChange( {\n\t\t\t\t...this.props.meta,\n\t\t\t\t...metaAttributes,\n\t\t\t} );\n\t\t}\n\t}\n\n\tonTouchStart() {\n\t\t// Detect touchstart to disable hover on iOS\n\t\tthis.hadTouchStart = true;\n\t}\n\n\tonClick() {\n\t\t// Clear touchstart detection\n\t\t// Browser will try to emulate mouse events also see https://www.html5rocks.com/en/mobile/touchandmouse/\n\t\tthis.hadTouchStart = false;\n\t}\n\n\t/**\n\t * A mouseover event handler to apply hover effect when a pointer device is\n\t * placed within the bounds of the block. The mouseover event is preferred\n\t * over mouseenter because it may be the case that a previous mouseenter\n\t * event was blocked from being handled by a IgnoreNestedEvents component,\n\t * therefore transitioning out of a nested block to the bounds of the block\n\t * would otherwise not trigger a hover effect.\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/Events/mouseenter\n\t */\n\tmaybeHover() {\n\t\tconst { isPartOfMultiSelection, isSelected } = this.props;\n\t\tconst { isHovered } = this.state;\n\n\t\tif ( isHovered || isPartOfMultiSelection || isSelected ||\n\t\t\t\tthis.props.isMultiSelecting || this.hadTouchStart ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState( { isHovered: true } );\n\t}\n\n\t/**\n\t * Sets the block state as unhovered if currently hovering. There are cases\n\t * where mouseleave may occur but the block is not hovered (multi-select),\n\t * so to avoid unnecesary renders, the state is only set if hovered.\n\t */\n\thideHoverEffects() {\n\t\tif ( this.state.isHovered ) {\n\t\t\tthis.setState( { isHovered: false } );\n\t\t}\n\t}\n\n\tmergeBlocks( forward = false ) {\n\t\tconst { block, previousBlockClientId, nextBlockClientId, onMerge } = this.props;\n\n\t\t// Do nothing when it's the first block.\n\t\tif (\n\t\t\t( ! forward && ! previousBlockClientId ) ||\n\t\t\t( forward && ! nextBlockClientId )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( forward ) {\n\t\t\tonMerge( block.clientId, nextBlockClientId );\n\t\t} else {\n\t\t\tonMerge( previousBlockClientId, block.clientId );\n\t\t}\n\t}\n\n\tinsertBlocksAfter( blocks ) {\n\t\tthis.props.onInsertBlocks( blocks, this.props.order + 1 );\n\t}\n\n\t/**\n\t * Marks the block as selected when focused and not already selected. This\n\t * specifically handles the case where block does not set focus on its own\n\t * (via `setFocus`), typically if there is no focusable input in the block.\n\t *\n\t * @return {void}\n\t */\n\tonFocus() {\n\t\tif ( ! this.props.isSelected && ! this.props.isPartOfMultiSelection ) {\n\t\t\tthis.props.onSelect();\n\t\t}\n\t}\n\n\t/**\n\t * Prevents default dragging behavior within a block to allow for multi-\n\t * selection to take effect unhampered.\n\t *\n\t * @param {DragEvent} event Drag event.\n\t *\n\t * @return {void}\n\t */\n\tpreventDrag( event ) {\n\t\tevent.preventDefault();\n\t}\n\n\t/**\n\t * Begins tracking cursor multi-selection when clicking down within block.\n\t *\n\t * @param {MouseEvent} event A mousedown event.\n\t *\n\t * @return {void}\n\t */\n\tonPointerDown( event ) {\n\t\t// Not the main button.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n\t\tif ( event.button !== 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( event.shiftKey ) {\n\t\t\tif ( ! this.props.isSelected ) {\n\t\t\t\tthis.onShiftSelection();\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.props.onSelectionStart( this.props.clientId );\n\n\t\t\t// Allow user to escape out of a multi-selection to a singular\n\t\t\t// selection of a block via click. This is handled here since\n\t\t\t// onFocus excludes blocks involved in a multiselection, as\n\t\t\t// focus can be incurred by starting a multiselection (focus\n\t\t\t// moved to first block's multi-controls).\n\t\t\tif ( this.props.isPartOfMultiSelection ) {\n\t\t\t\tthis.props.onSelect();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Interprets keydown event intent to remove or insert after block if key\n\t * event occurs on wrapper node. This can occur when the block has no text\n\t * fields of its own, particularly after initial insertion, to allow for\n\t * easy deletion and continuous writing flow to add additional content.\n\t *\n\t * @param {KeyboardEvent} event Keydown event.\n\t */\n\tdeleteOrInsertAfterWrapper( event ) {\n\t\tconst { keyCode, target } = event;\n\n\t\tif (\n\t\t\t! this.props.isSelected ||\n\t\t\ttarget !== this.wrapperNode ||\n\t\t\tthis.props.isLocked\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch ( keyCode ) {\n\t\t\tcase ENTER:\n\t\t\t\t// Insert default block after current block if enter and event\n\t\t\t\t// not already handled by descendant.\n\t\t\t\tthis.props.onInsertDefaultBlockAfter();\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\n\t\t\tcase BACKSPACE:\n\t\t\tcase DELETE:\n\t\t\t\t// Remove block on backspace.\n\t\t\t\tconst { clientId, onRemove } = this.props;\n\t\t\t\tonRemove( clientId );\n\t\t\t\tevent.preventDefault();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tonBlockError( error ) {\n\t\tthis.setState( { error } );\n\t}\n\n\tonDragStart() {\n\t\tthis.setState( { dragging: true } );\n\t}\n\n\tonDragEnd() {\n\t\tthis.setState( { dragging: false } );\n\t}\n\n\tselectOnOpen( open ) {\n\t\tif ( open && ! this.props.isSelected ) {\n\t\t\tthis.props.onSelect();\n\t\t}\n\t}\n\n\tonShiftSelection() {\n\t\tif ( ! this.props.isSelectionEnabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { getBlockSelectionStart, onMultiSelect, onSelect } = this.props;\n\n\t\tif ( getBlockSelectionStart() ) {\n\t\t\tonMultiSelect( getBlockSelectionStart(), this.props.clientId );\n\t\t} else {\n\t\t\tonSelect( this.props.clientId );\n\t\t}\n\t}\n\n\tforceFocusedContextualToolbar() {\n\t\tthis.isForcingContextualToolbar = true;\n\t\t// trigger a re-render\n\t\tthis.setState( () => ( {} ) );\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<HoverArea container={ this.wrapperNode }>\n\t\t\t\t{ ( { hoverArea } ) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tblock,\n\t\t\t\t\t\torder,\n\t\t\t\t\t\tmode,\n\t\t\t\t\t\tisFocusMode,\n\t\t\t\t\t\thasFixedToolbar,\n\t\t\t\t\t\tisLocked,\n\t\t\t\t\t\tisFirst,\n\t\t\t\t\t\tisLast,\n\t\t\t\t\t\tclientId,\n\t\t\t\t\t\trootClientId,\n\t\t\t\t\t\tisSelected,\n\t\t\t\t\t\tisPartOfMultiSelection,\n\t\t\t\t\t\tisFirstMultiSelected,\n\t\t\t\t\t\tisTypingWithinBlock,\n\t\t\t\t\t\tisCaretWithinFormattedText,\n\t\t\t\t\t\tisMultiSelecting,\n\t\t\t\t\t\tisEmptyDefaultBlock,\n\t\t\t\t\t\tisMovable,\n\t\t\t\t\t\tisPreviousBlockADefaultEmptyBlock,\n\t\t\t\t\t\tisParentOfSelectedBlock,\n\t\t\t\t\t\tisDraggable,\n\t\t\t\t\t\tclassName,\n\t\t\t\t\t} = this.props;\n\t\t\t\t\tconst isHovered = this.state.isHovered && ! isMultiSelecting;\n\t\t\t\t\tconst { name: blockName, isValid } = block;\n\t\t\t\t\tconst blockType = getBlockType( blockName );\n\t\t\t\t\t// translators: %s: Type of block (i.e. Text, Image etc)\n\t\t\t\t\tconst blockLabel = sprintf( __( 'Block: %s' ), blockType.title );\n\t\t\t\t\t// The block as rendered in the editor is composed of general block UI\n\t\t\t\t\t// (mover, toolbar, wrapper) and the display of the block content.\n\n\t\t\t\t\tconst isUnregisteredBlock = block.name === getUnregisteredTypeHandlerName();\n\n\t\t\t\t\t// If the block is selected and we're typing the block should not appear.\n\t\t\t\t\t// Empty paragraph blocks should always show up as unselected.\n\t\t\t\t\tconst showEmptyBlockSideInserter = ( isSelected || isHovered ) && isEmptyDefaultBlock && isValid;\n\t\t\t\t\tconst showSideInserter = ( isSelected || isHovered ) && isEmptyDefaultBlock;\n\t\t\t\t\tconst shouldAppearSelected = ! isFocusMode && ! hasFixedToolbar && ! showSideInserter && isSelected && ! isTypingWithinBlock;\n\t\t\t\t\tconst shouldAppearHovered = ! isFocusMode && ! hasFixedToolbar && isHovered && ! isEmptyDefaultBlock;\n\t\t\t\t\t// We render block movers and block settings to keep them tabbale even if hidden\n\t\t\t\t\tconst shouldRenderMovers = ! isFocusMode && ( isSelected || hoverArea === 'left' ) && ! showEmptyBlockSideInserter && ! isMultiSelecting && ! isPartOfMultiSelection && ! isTypingWithinBlock;\n\t\t\t\t\tconst shouldShowBreadcrumb = ! isFocusMode && isHovered && ! isEmptyDefaultBlock;\n\t\t\t\t\tconst shouldShowContextualToolbar = ! hasFixedToolbar && ! showSideInserter && ( ( isSelected && ( ! isTypingWithinBlock || isCaretWithinFormattedText ) ) || isFirstMultiSelected );\n\t\t\t\t\tconst shouldShowMobileToolbar = shouldAppearSelected;\n\t\t\t\t\tconst { error, dragging } = this.state;\n\n\t\t\t\t\t// Insertion point can only be made visible if the block is at the\n\t\t\t\t\t// the extent of a multi-selection, or not in a multi-selection.\n\t\t\t\t\tconst shouldShowInsertionPoint = ( isPartOfMultiSelection && isFirstMultiSelected ) || ! isPartOfMultiSelection;\n\t\t\t\t\tconst canShowInBetweenInserter = ! isEmptyDefaultBlock && ! isPreviousBlockADefaultEmptyBlock;\n\n\t\t\t\t\t// The wp-block className is important for editor styles.\n\t\t\t\t\t// Generate the wrapper class names handling the different states of the block.\n\t\t\t\t\tconst wrapperClassName = classnames( 'wp-block editor-block-list__block', {\n\t\t\t\t\t\t'has-warning': ! isValid || !! error || isUnregisteredBlock,\n\t\t\t\t\t\t'is-selected': shouldAppearSelected,\n\t\t\t\t\t\t'is-multi-selected': isPartOfMultiSelection,\n\t\t\t\t\t\t'is-hovered': shouldAppearHovered,\n\t\t\t\t\t\t'is-reusable': isReusableBlock( blockType ),\n\t\t\t\t\t\t'is-dragging': dragging,\n\t\t\t\t\t\t'is-typing': isTypingWithinBlock,\n\t\t\t\t\t\t'is-focused': isFocusMode && ( isSelected || isParentOfSelectedBlock ),\n\t\t\t\t\t\t'is-focus-mode': isFocusMode,\n\t\t\t\t\t}, className );\n\n\t\t\t\t\tconst { onReplace } = this.props;\n\n\t\t\t\t\t// Determine whether the block has props to apply to the wrapper.\n\t\t\t\t\tlet wrapperProps = this.props.wrapperProps;\n\t\t\t\t\tif ( blockType.getEditWrapperProps ) {\n\t\t\t\t\t\twrapperProps = {\n\t\t\t\t\t\t\t...wrapperProps,\n\t\t\t\t\t\t\t...blockType.getEditWrapperProps( block.attributes ),\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tconst blockElementId = `block-${ clientId }`;\n\n\t\t\t\t\t// We wrap the BlockEdit component in a div that hides it when editing in\n\t\t\t\t\t// HTML mode. This allows us to render all of the ancillary pieces\n\t\t\t\t\t// (InspectorControls, etc.) which are inside `BlockEdit` but not\n\t\t\t\t\t// `BlockHTML`, even in HTML mode.\n\t\t\t\t\tlet blockEdit = (\n\t\t\t\t\t\t<BlockEdit\n\t\t\t\t\t\t\tname={ blockName }\n\t\t\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\t\t\tattributes={ block.attributes }\n\t\t\t\t\t\t\tsetAttributes={ this.setAttributes }\n\t\t\t\t\t\t\tinsertBlocksAfter={ isLocked ? undefined : this.insertBlocksAfter }\n\t\t\t\t\t\t\tonReplace={ isLocked ? undefined : onReplace }\n\t\t\t\t\t\t\tmergeBlocks={ isLocked ? undefined : this.mergeBlocks }\n\t\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\t\tisSelectionEnabled={ this.props.isSelectionEnabled }\n\t\t\t\t\t\t\ttoggleSelection={ this.props.toggleSelection }\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t\tif ( mode !== 'visual' ) {\n\t\t\t\t\t\tblockEdit = <div style={ { display: 'none' } }>{ blockEdit }</div>;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Disable reasons:\n\t\t\t\t\t//\n\t\t\t\t\t//  jsx-a11y/mouse-events-have-key-events:\n\t\t\t\t\t//   - onMouseOver is explicitly handling hover effects\n\t\t\t\t\t//\n\t\t\t\t\t//  jsx-a11y/no-static-element-interactions:\n\t\t\t\t\t//   - Each block can be selected by clicking on it\n\n\t\t\t\t\t/* eslint-disable jsx-a11y/mouse-events-have-key-events, jsx-a11y/no-static-element-interactions, jsx-a11y/onclick-has-role, jsx-a11y/click-events-have-key-events */\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<IgnoreNestedEvents\n\t\t\t\t\t\t\tid={ blockElementId }\n\t\t\t\t\t\t\tref={ this.setBlockListRef }\n\t\t\t\t\t\t\tonMouseOver={ this.maybeHover }\n\t\t\t\t\t\t\tonMouseOverHandled={ this.hideHoverEffects }\n\t\t\t\t\t\t\tonMouseLeave={ this.hideHoverEffects }\n\t\t\t\t\t\t\tclassName={ wrapperClassName }\n\t\t\t\t\t\t\tdata-type={ block.name }\n\t\t\t\t\t\t\tonTouchStart={ this.onTouchStart }\n\t\t\t\t\t\t\tonFocus={ this.onFocus }\n\t\t\t\t\t\t\tonClick={ this.onClick }\n\t\t\t\t\t\t\tonKeyDown={ this.deleteOrInsertAfterWrapper }\n\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\taria-label={ blockLabel }\n\t\t\t\t\t\t\tchildHandledEvents={ [\n\t\t\t\t\t\t\t\t'onDragStart',\n\t\t\t\t\t\t\t\t'onMouseDown',\n\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\t{ ...wrapperProps }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ shouldShowInsertionPoint && (\n\t\t\t\t\t\t\t\t<BlockInsertionPoint\n\t\t\t\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\t\t\t\t\tcanShowInserter={ canShowInBetweenInserter }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t<BlockDropZone\n\t\t\t\t\t\t\t\tindex={ order }\n\t\t\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{ shouldRenderMovers && (\n\t\t\t\t\t\t\t\t<BlockMover\n\t\t\t\t\t\t\t\t\tclientIds={ clientId }\n\t\t\t\t\t\t\t\t\tblockElementId={ blockElementId }\n\t\t\t\t\t\t\t\t\tisFirst={ isFirst }\n\t\t\t\t\t\t\t\t\tisLast={ isLast }\n\t\t\t\t\t\t\t\t\tisHidden={ ! ( isHovered || isSelected ) || hoverArea !== 'left' }\n\t\t\t\t\t\t\t\t\tisDraggable={ ( isDraggable !== false ) && ( ! isPartOfMultiSelection && isMovable ) }\n\t\t\t\t\t\t\t\t\tonDragStart={ this.onDragStart }\n\t\t\t\t\t\t\t\t\tonDragEnd={ this.onDragEnd }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t{ isFirstMultiSelected && (\n\t\t\t\t\t\t\t\t<BlockMultiControls rootClientId={ rootClientId } />\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t<div className=\"editor-block-list__block-edit\">\n\t\t\t\t\t\t\t\t{ shouldShowBreadcrumb && (\n\t\t\t\t\t\t\t\t\t<BlockBreadcrumb\n\t\t\t\t\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\t\t\t\t\tisHidden={ ! ( isHovered || isSelected ) || hoverArea !== 'left' }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t{ (\n\t\t\t\t\t\t\t\t\tshouldShowContextualToolbar ||\n\t\t\t\t\t\t\t\t\tthis.isForcingContextualToolbar\n\t\t\t\t\t\t\t\t) && (\n\t\t\t\t\t\t\t\t\t<BlockContextualToolbar\n\t\t\t\t\t\t\t\t\t\t// If the toolbar is being shown because of being forced\n\t\t\t\t\t\t\t\t\t\t// it should focus the toolbar right after the mount.\n\t\t\t\t\t\t\t\t\t\tfocusOnMount={ this.isForcingContextualToolbar }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t{ (\n\t\t\t\t\t\t\t\t\t! shouldShowContextualToolbar &&\n\t\t\t\t\t\t\t\t\tisSelected &&\n\t\t\t\t\t\t\t\t\t! hasFixedToolbar &&\n\t\t\t\t\t\t\t\t\t! isEmptyDefaultBlock\n\t\t\t\t\t\t\t\t) && (\n\t\t\t\t\t\t\t\t\t<KeyboardShortcuts\n\t\t\t\t\t\t\t\t\t\tbindGlobal\n\t\t\t\t\t\t\t\t\t\teventName=\"keydown\"\n\t\t\t\t\t\t\t\t\t\tshortcuts={ {\n\t\t\t\t\t\t\t\t\t\t\t'alt+f10': this.forceFocusedContextualToolbar,\n\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t<IgnoreNestedEvents\n\t\t\t\t\t\t\t\t\tref={ this.bindBlockNode }\n\t\t\t\t\t\t\t\t\tonDragStart={ this.preventDrag }\n\t\t\t\t\t\t\t\t\tonMouseDown={ this.onPointerDown }\n\t\t\t\t\t\t\t\t\tdata-block={ clientId }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<BlockCrashBoundary onError={ this.onBlockError }>\n\t\t\t\t\t\t\t\t\t\t{ isValid && blockEdit }\n\t\t\t\t\t\t\t\t\t\t{ isValid && mode === 'html' && (\n\t\t\t\t\t\t\t\t\t\t\t<BlockHtml clientId={ clientId } />\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\t{ ! isValid && [\n\t\t\t\t\t\t\t\t\t\t\t<BlockInvalidWarning\n\t\t\t\t\t\t\t\t\t\t\t\tkey=\"invalid-warning\"\n\t\t\t\t\t\t\t\t\t\t\t\tblock={ block }\n\t\t\t\t\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t\t\t\t\t\t<div key=\"invalid-preview\">\n\t\t\t\t\t\t\t\t\t\t\t\t{ getSaveElement( blockType, block.attributes ) }\n\t\t\t\t\t\t\t\t\t\t\t</div>,\n\t\t\t\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\t\t\t</BlockCrashBoundary>\n\t\t\t\t\t\t\t\t\t{ shouldShowMobileToolbar && (\n\t\t\t\t\t\t\t\t\t\t<BlockMobileToolbar\n\t\t\t\t\t\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t{ !! error && <BlockCrashWarning /> }\n\t\t\t\t\t\t\t\t</IgnoreNestedEvents>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{ showEmptyBlockSideInserter && (\n\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t<div className=\"editor-block-list__side-inserter\">\n\t\t\t\t\t\t\t\t\t\t<InserterWithShortcuts\n\t\t\t\t\t\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\t\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\t\t\t\t\t\t\tonToggle={ this.selectOnOpen }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"editor-block-list__empty-block-inserter\">\n\t\t\t\t\t\t\t\t\t\t<Inserter\n\t\t\t\t\t\t\t\t\t\t\tposition=\"top right\"\n\t\t\t\t\t\t\t\t\t\t\tonToggle={ this.selectOnOpen }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</IgnoreNestedEvents>\n\t\t\t\t\t);\n\t\t\t\t\t/* eslint-enable jsx-a11y/no-static-element-interactions, jsx-a11y/onclick-has-role, jsx-a11y/click-events-have-key-events */\n\t\t\t\t} }\n\t\t\t</HoverArea>\n\t\t);\n\t}\n}\n\nconst applyWithSelect = withSelect( ( select, { clientId, rootClientId, isLargeViewport } ) => {\n\tconst {\n\t\tisBlockSelected,\n\t\tgetPreviousBlockClientId,\n\t\tgetNextBlockClientId,\n\t\tgetBlock,\n\t\tisAncestorMultiSelected,\n\t\tisBlockMultiSelected,\n\t\tisFirstMultiSelectedBlock,\n\t\tisMultiSelecting,\n\t\tisTyping,\n\t\tisCaretWithinFormattedText,\n\t\tgetBlockIndex,\n\t\tgetEditedPostAttribute,\n\t\tgetBlockMode,\n\t\tisSelectionEnabled,\n\t\tgetSelectedBlocksInitialCaretPosition,\n\t\tgetEditorSettings,\n\t\thasSelectedInnerBlock,\n\t\tgetTemplateLock,\n\t\tgetBlockSelectionStart,\n\t} = select( 'core/editor' );\n\tconst isSelected = isBlockSelected( clientId );\n\tconst { hasFixedToolbar, focusMode } = getEditorSettings();\n\tconst block = getBlock( clientId );\n\tconst previousBlockClientId = getPreviousBlockClientId( clientId );\n\tconst previousBlock = getBlock( previousBlockClientId );\n\tconst templateLock = getTemplateLock( rootClientId );\n\tconst isParentOfSelectedBlock = hasSelectedInnerBlock( clientId, true );\n\n\treturn {\n\t\tnextBlockClientId: getNextBlockClientId( clientId ),\n\t\tisPartOfMultiSelection: isBlockMultiSelected( clientId ) || isAncestorMultiSelected( clientId ),\n\t\tisFirstMultiSelected: isFirstMultiSelectedBlock( clientId ),\n\t\tisMultiSelecting: isMultiSelecting(),\n\t\t// We only care about this prop when the block is selected\n\t\t// Thus to avoid unnecessary rerenders we avoid updating the prop if the block is not selected.\n\t\tisTypingWithinBlock: ( isSelected || isParentOfSelectedBlock ) && isTyping(),\n\t\tisCaretWithinFormattedText: isCaretWithinFormattedText(),\n\t\torder: getBlockIndex( clientId, rootClientId ),\n\t\tmeta: getEditedPostAttribute( 'meta' ),\n\t\tmode: getBlockMode( clientId ),\n\t\tisSelectionEnabled: isSelectionEnabled(),\n\t\tinitialPosition: getSelectedBlocksInitialCaretPosition(),\n\t\tisEmptyDefaultBlock: block && isUnmodifiedDefaultBlock( block ),\n\t\tisPreviousBlockADefaultEmptyBlock: previousBlock && isUnmodifiedDefaultBlock( previousBlock ),\n\t\tisMovable: 'all' !== templateLock,\n\t\tisLocked: !! templateLock,\n\t\tisFocusMode: focusMode && isLargeViewport,\n\t\thasFixedToolbar: hasFixedToolbar && isLargeViewport,\n\t\tpreviousBlockClientId,\n\t\tblock,\n\t\tisSelected,\n\t\tisParentOfSelectedBlock,\n\t\t// We only care about this value when the shift key is pressed.\n\t\t// We call it dynamically in the event handler to avoid unnecessary re-renders.\n\t\tgetBlockSelectionStart,\n\t};\n} );\n\nconst applyWithDispatch = withDispatch( ( dispatch, ownProps ) => {\n\tconst {\n\t\tupdateBlockAttributes,\n\t\tselectBlock,\n\t\tmultiSelect,\n\t\tinsertBlocks,\n\t\tinsertDefaultBlock,\n\t\tremoveBlock,\n\t\tmergeBlocks,\n\t\treplaceBlocks,\n\t\teditPost,\n\t\ttoggleSelection,\n\t} = dispatch( 'core/editor' );\n\n\treturn {\n\t\tonChange( clientId, attributes ) {\n\t\t\tupdateBlockAttributes( clientId, attributes );\n\t\t},\n\t\tonSelect( clientId = ownProps.clientId, initialPosition ) {\n\t\t\tselectBlock( clientId, initialPosition );\n\t\t},\n\t\tonMultiSelect: multiSelect,\n\t\tonInsertBlocks( blocks, index ) {\n\t\t\tconst { rootClientId } = ownProps;\n\t\t\tinsertBlocks( blocks, index, rootClientId );\n\t\t},\n\t\tonInsertDefaultBlockAfter() {\n\t\t\tconst { order, rootClientId } = ownProps;\n\t\t\tinsertDefaultBlock( {}, rootClientId, order + 1 );\n\t\t},\n\t\tonRemove( clientId ) {\n\t\t\tremoveBlock( clientId );\n\t\t},\n\t\tonMerge( ...args ) {\n\t\t\tmergeBlocks( ...args );\n\t\t},\n\t\tonReplace( blocks ) {\n\t\t\treplaceBlocks( [ ownProps.clientId ], blocks );\n\t\t},\n\t\tonMetaChange( meta ) {\n\t\t\teditPost( { meta } );\n\t\t},\n\t\ttoggleSelection( selectionEnabled ) {\n\t\t\ttoggleSelection( selectionEnabled );\n\t\t},\n\t};\n} );\n\nexport default compose(\n\twithViewportMatch( { isLargeViewport: 'medium' } ),\n\tapplyWithSelect,\n\tapplyWithDispatch,\n\twithFilters( 'editor.BlockListBlock' ),\n)( BlockListBlock );\n"]}