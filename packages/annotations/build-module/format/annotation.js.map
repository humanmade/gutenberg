{"version":3,"sources":["/home/circleci/project/packages/annotations/src/format/annotation.js"],"names":["__","name","applyFormat","removeFormat","applyAnnotations","record","annotations","forEach","annotation","start","end","text","length","className","source","type","attributes","removeAnnotations","title","tagName","edit","__experimentalGetPropsForEditableTreePreparation","select","richTextIdentifier","blockClientId","__experimentalGetAnnotationsForRichText","__experimentalCreatePrepareEditableTree","props","formats"],"mappings":"AAAA;;;AAGA,SAASA,EAAT,QAAmB,iBAAnB;AAEA,IAAMC,IAAI,GAAG,iBAAb;AAEA;;;;AAGA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,sBAA1C;AAEA;;;;;;;;AAOA,OAAO,SAASC,gBAAT,CAA2BC,MAA3B,EAAsD;AAAA,MAAnBC,WAAmB,uEAAL,EAAK;AAC5DA,EAAAA,WAAW,CAACC,OAAZ,CAAqB,UAAEC,UAAF,EAAkB;AAAA,QAChCC,KADgC,GACjBD,UADiB,CAChCC,KADgC;AAAA,QACzBC,GADyB,GACjBF,UADiB,CACzBE,GADyB;;AAGtC,QAAKD,KAAK,GAAGJ,MAAM,CAACM,IAAP,CAAYC,MAAzB,EAAkC;AACjCH,MAAAA,KAAK,GAAGJ,MAAM,CAACM,IAAP,CAAYC,MAApB;AACA;;AAED,QAAKF,GAAG,GAAGL,MAAM,CAACM,IAAP,CAAYC,MAAvB,EAAgC;AAC/BF,MAAAA,GAAG,GAAGL,MAAM,CAACM,IAAP,CAAYC,MAAlB;AACA;;AAED,QAAMC,SAAS,GAAG,qBAAqBL,UAAU,CAACM,MAAlD;AAEAT,IAAAA,MAAM,GAAGH,WAAW,CACnBG,MADmB,EAEnB;AAAEU,MAAAA,IAAI,EAAE,iBAAR;AAA2BC,MAAAA,UAAU,EAAE;AAAEH,QAAAA,SAAS,EAATA;AAAF;AAAvC,KAFmB,EAGnBJ,KAHmB,EAInBC,GAJmB,CAApB;AAMA,GAnBD;AAqBA,SAAOL,MAAP;AACA;AAED;;;;;;;AAMA,OAAO,SAASY,iBAAT,CAA4BZ,MAA5B,EAAqC;AAC3C,SAAOF,YAAY,CAAEE,MAAF,EAAU,iBAAV,EAA6B,CAA7B,EAAgCA,MAAM,CAACM,IAAP,CAAYC,MAA5C,CAAnB;AACA;AAED,OAAO,IAAMJ,UAAU,GAAG;AACzBP,EAAAA,IAAI,EAAJA,IADyB;AAEzBiB,EAAAA,KAAK,EAAElB,EAAE,CAAE,YAAF,CAFgB;AAGzBmB,EAAAA,OAAO,EAAE,MAHgB;AAIzBN,EAAAA,SAAS,EAAE,iBAJc;AAKzBG,EAAAA,UAAU,EAAE;AACXH,IAAAA,SAAS,EAAE;AADA,GALa;AAQzBO,EAAAA,IARyB,kBAQlB;AACN,WAAO,IAAP;AACA,GAVwB;AAWzBC,EAAAA,gDAXyB,4DAWyBC,MAXzB,QAWyE;AAAA,QAAtCC,kBAAsC,QAAtCA,kBAAsC;AAAA,QAAlBC,aAAkB,QAAlBA,aAAkB;AACjG,WAAO;AACNlB,MAAAA,WAAW,EAAEgB,MAAM,CAAE,kBAAF,CAAN,CAA6BG,uCAA7B,CAAsED,aAAtE,EAAqFD,kBAArF;AADP,KAAP;AAGA,GAfwB;AAgBzBG,EAAAA,uCAhByB,mDAgBgBC,KAhBhB,EAgBwB;AAChD,WAAO,UAAEC,OAAF,EAAWjB,IAAX,EAAqB;AAC3B,UAAKgB,KAAK,CAACrB,WAAN,CAAkBM,MAAlB,KAA6B,CAAlC,EAAsC;AACrC,eAAOgB,OAAP;AACA;;AAED,UAAIvB,MAAM,GAAG;AAAEuB,QAAAA,OAAO,EAAPA,OAAF;AAAWjB,QAAAA,IAAI,EAAJA;AAAX,OAAb;AACAN,MAAAA,MAAM,GAAGD,gBAAgB,CAAEC,MAAF,EAAUsB,KAAK,CAACrB,WAAhB,CAAzB;AACA,aAAOD,MAAM,CAACuB,OAAd;AACA,KARD;AASA;AA1BwB,CAAnB","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\nconst name = 'core/annotation';\n\n/**\n * WordPress dependencies\n */\nimport { applyFormat, removeFormat } from '@wordpress/rich-text';\n\n/**\n * Applies given annotations to the given record.\n *\n * @param {Object} record The record to apply annotations to.\n * @param {Array} annotations The annotation to apply.\n * @return {Object} A record with the annotations applied.\n */\nexport function applyAnnotations( record, annotations = [] ) {\n\tannotations.forEach( ( annotation ) => {\n\t\tlet { start, end } = annotation;\n\n\t\tif ( start > record.text.length ) {\n\t\t\tstart = record.text.length;\n\t\t}\n\n\t\tif ( end > record.text.length ) {\n\t\t\tend = record.text.length;\n\t\t}\n\n\t\tconst className = 'annotation-text-' + annotation.source;\n\n\t\trecord = applyFormat(\n\t\t\trecord,\n\t\t\t{ type: 'core/annotation', attributes: { className } },\n\t\t\tstart,\n\t\t\tend\n\t\t);\n\t} );\n\n\treturn record;\n}\n\n/**\n * Removes annotations from the given record.\n *\n * @param {Object} record Record to remove annotations from.\n * @return {Object} The cleaned record.\n */\nexport function removeAnnotations( record ) {\n\treturn removeFormat( record, 'core/annotation', 0, record.text.length );\n}\n\nexport const annotation = {\n\tname,\n\ttitle: __( 'Annotation' ),\n\ttagName: 'mark',\n\tclassName: 'annotation-text',\n\tattributes: {\n\t\tclassName: 'class',\n\t},\n\tedit() {\n\t\treturn null;\n\t},\n\t__experimentalGetPropsForEditableTreePreparation( select, { richTextIdentifier, blockClientId } ) {\n\t\treturn {\n\t\t\tannotations: select( 'core/annotations' ).__experimentalGetAnnotationsForRichText( blockClientId, richTextIdentifier ),\n\t\t};\n\t},\n\t__experimentalCreatePrepareEditableTree( props ) {\n\t\treturn ( formats, text ) => {\n\t\t\tif ( props.annotations.length === 0 ) {\n\t\t\t\treturn formats;\n\t\t\t}\n\n\t\t\tlet record = { formats, text };\n\t\t\trecord = applyAnnotations( record, props.annotations );\n\t\t\treturn record.formats;\n\t\t};\n\t},\n};\n"]}