{"version":3,"sources":["/home/circleci/project/packages/edit-post/src/index.js"],"names":["reinitializeEditor","postType","postId","target","settings","initialEdits","reboot","bind","initializeEditor","id","document","getElementById","triggerGuide"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA;;AALA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAKA;;AACA;;AACA;;AACA;;AAuEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AA7FA;;;;AAWA;;;;AAQA;;;;;;;;;;;;;AAaO,SAASA,kBAAT,CAA6BC,QAA7B,EAAuCC,MAAvC,EAA+CC,MAA/C,EAAuDC,QAAvD,EAAiEC,YAAjE,EAAgF;AACtF,uCAAwBF,MAAxB;AACA,MAAMG,MAAM,GAAGN,kBAAkB,CAACO,IAAnB,CAAyB,IAAzB,EAA+BN,QAA/B,EAAyCC,MAAzC,EAAiDC,MAAjD,EAAyDC,QAAzD,EAAmEC,YAAnE,CAAf;AAEA,uBACC,4BAAC,gBAAD;AACC,IAAA,QAAQ,EAAGD,QADZ;AAEC,IAAA,OAAO,EAAGE,MAFX;AAGC,IAAA,MAAM,EAAGJ,MAHV;AAIC,IAAA,QAAQ,EAAGD,QAJZ;AAKC,IAAA,YAAY,EAAGI,YALhB;AAMC,IAAA,QAAQ;AANT,IADD,EASCF,MATD;AAWA;AAED;;;;;;;;;;;;;;;;AAcO,SAASK,gBAAT,CAA2BC,EAA3B,EAA+BR,QAA/B,EAAyCC,MAAzC,EAAiDE,QAAjD,EAA2DC,YAA3D,EAA0E;AAChF,MAAMF,MAAM,GAAGO,QAAQ,CAACC,cAAT,CAAyBF,EAAzB,CAAf;AACA,MAAMH,MAAM,GAAGN,kBAAkB,CAACO,IAAnB,CAAyB,IAAzB,EAA+BN,QAA/B,EAAyCC,MAAzC,EAAiDC,MAAjD,EAAyDC,QAAzD,EAAmEC,YAAnE,CAAf;AAEA;AAEA,sBAAU,UAAV,EAAuBO,YAAvB,CAAqC,CACpC,sBADoC,EAEpC,sBAFoC,EAGpC,qBAHoC,EAIpC,qBAJoC,CAArC;AAOA,uBACC,4BAAC,gBAAD;AACC,IAAA,QAAQ,EAAGR,QADZ;AAEC,IAAA,OAAO,EAAGE,MAFX;AAGC,IAAA,MAAM,EAAGJ,MAHV;AAIC,IAAA,QAAQ,EAAGD,QAJZ;AAKC,IAAA,YAAY,EAAGI;AALhB,IADD,EAQCF,MARD;AAUA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport '@wordpress/core-data';\nimport '@wordpress/editor';\nimport '@wordpress/nux';\nimport '@wordpress/viewport';\nimport { registerCoreBlocks } from '@wordpress/block-library';\nimport { render, unmountComponentAtNode } from '@wordpress/element';\nimport { dispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport './hooks';\nimport './plugins';\nimport './store';\nimport Editor from './editor';\n\n/**\n * Reinitializes the editor after the user chooses to reboot the editor after\n * an unhandled error occurs, replacing previously mounted editor element using\n * an initial state from prior to the crash.\n *\n * @param {Object}  postType     Post type of the post to edit.\n * @param {Object}  postId       ID of the post to edit.\n * @param {Element} target       DOM node in which editor is rendered.\n * @param {?Object} settings     Editor settings object.\n * @param {Object}  initialEdits Programmatic edits to apply initially, to be\n *                               considered as non-user-initiated (bypass for\n *                               unsaved changes prompt).\n */\nexport function reinitializeEditor( postType, postId, target, settings, initialEdits ) {\n\tunmountComponentAtNode( target );\n\tconst reboot = reinitializeEditor.bind( null, postType, postId, target, settings, initialEdits );\n\n\trender(\n\t\t<Editor\n\t\t\tsettings={ settings }\n\t\t\tonError={ reboot }\n\t\t\tpostId={ postId }\n\t\t\tpostType={ postType }\n\t\t\tinitialEdits={ initialEdits }\n\t\t\trecovery\n\t\t/>,\n\t\ttarget\n\t);\n}\n\n/**\n * Initializes and returns an instance of Editor.\n *\n * The return value of this function is not necessary if we change where we\n * call initializeEditor(). This is due to metaBox timing.\n *\n * @param {string}  id           Unique identifier for editor instance.\n * @param {Object}  postType     Post type of the post to edit.\n * @param {Object}  postId       ID of the post to edit.\n * @param {?Object} settings     Editor settings object.\n * @param {Object}  initialEdits Programmatic edits to apply initially, to be\n *                               considered as non-user-initiated (bypass for\n *                               unsaved changes prompt).\n */\nexport function initializeEditor( id, postType, postId, settings, initialEdits ) {\n\tconst target = document.getElementById( id );\n\tconst reboot = reinitializeEditor.bind( null, postType, postId, target, settings, initialEdits );\n\n\tregisterCoreBlocks();\n\n\tdispatch( 'core/nux' ).triggerGuide( [\n\t\t'core/editor.inserter',\n\t\t'core/editor.settings',\n\t\t'core/editor.preview',\n\t\t'core/editor.publish',\n\t] );\n\n\trender(\n\t\t<Editor\n\t\t\tsettings={ settings }\n\t\t\tonError={ reboot }\n\t\t\tpostId={ postId }\n\t\t\tpostType={ postType }\n\t\t\tinitialEdits={ initialEdits }\n\t\t/>,\n\t\ttarget\n\t);\n}\n\nexport { default as PluginBlockSettingsMenuItem } from './components/block-settings-menu/plugin-block-settings-menu-item';\nexport { default as PluginPostPublishPanel } from './components/sidebar/plugin-post-publish-panel';\nexport { default as PluginPostStatusInfo } from './components/sidebar/plugin-post-status-info';\nexport { default as PluginPrePublishPanel } from './components/sidebar/plugin-pre-publish-panel';\nexport { default as PluginSidebar } from './components/sidebar/plugin-sidebar';\nexport { default as PluginSidebarMoreMenuItem } from './components/header/plugin-sidebar-more-menu-item';\n"]}